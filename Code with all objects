#First, we imported the enumerator type to limit the user choices and make the code more robust'
from enum import Enum

class Gender(Enum):
    Female=1
    Male=2
#We create a classs called customer and define the instructor to initializes the object with the provided attributes, and we define each attribute, then we have the setter functions 
#to set the values of the object attributes and getter functions to get the values of the objects attributes. We have the'__' before each attribute to ensure they are private' 
class Customer:
    def __init__(self, firstName, lastName, cellPhoneNumber, gender, dateOfBirth):
        self.__firstName = firstName
        self.__lastName = lastName
        self.__cellPhoneNumber = cellPhoneNumber
        self.__gender = gender
        self.__dateOfBirth = dateOfBirth
    
    def setFirstName(self, firstName):
        self.__firstName = firstName

    def getFirstName(self):
        return self.__firstName
    
    def setLastName(self, lastName):
        self.__lastName = lastName

    def getLastName(self):
        return self.__lastName
    
    def set_CellPhoneNumber(self, cellPhoneNumber):
        self.__cellPhoneNumber = cellPhoneNumber

    def getCellPhoneNumber(self):
        return self.__cellPhoneNumber

    def set_gender(self, gender):
        self.__gender = gender
        
    def get_gender(self):
        return self.__gender
    
    def setDateOfBirth(self, dateOfBirth):
        self.__dateOfBirth = dateOfBirth
    
    def getDateOfBirth(self):
        return self.__date_of_birth
#we define a function that will help us get all the information at once which much more efficient than getting them one by one.'
    def printInfo(self):
        print("First Name: ",self.__firstName,", Last Name: ",self.__lastName," ","Cell Phone Number:"," ",self.__cellPhoneNumber, " ", "Gender:", self.__gender.name," ","Date Of Birth:",self.__dateOfBirth)
#we create an object to show actual values of the attributes of the class and print the info of it
Customer1=Customer("James","W.Jones","816-897-9862",Gender.Male, "[1990-10-05]")
Customer1.printInfo()

#We create a classs called Service and define the instructor to initializes the object with the provided attributes, and we define each attribute, then we have the setter functions 
#to set the values of the object attributes and getter functions to get the values of the objects attributes. We have the'__' before each attribute to ensure they are private' 
class Service:
    def __init__(self, serviceName, servicePrice, mechanicName, dateOfService, numberOfService):
        self.__serviceName = serviceName
        self.__servicePrice = servicePrice
        self.__mechanicName = mechanicName
        self.__dateOfService = dateOfService
        self.__numberOfService = numberOfService
    
    def setServiceName(self, serviceName):
        self.__serviceName = serviceName

    def getServiceName(self):
        return self.__serviceName

    def setServicePrice(self, servicePrice):
        self.__servicePrice = servicePrice

    def getServicePrice(self):
        return self.__servicePrice

    def setMechanicName(self, mechanicName):
        self.__mechanicName = mechanicName
    
    def getMechanicName(self):
        return self.__mechanicName

    def setDateOfService(self, dateOfService):
        self.__dateOfService = dateOfService
 
    def getDateOfService(self):
        return self.__dateOfService

    def setNumberOfService(self, numberOfService):
        self.__numberOfService = numberOfService

    def getNumberOfService(self):
        return self.__numberOfService
 #we define a function that will help us get all the information at once which much more efficient than getting them one by one.'   
    def printInfo(self):
        print("Service Name:",self.__serviceName,", Service Price: ",self.__servicePrice,", Mechanic Name:",self.__mechanicName, ", Date Of Service:", self.__dateOfService,", Number Of Service:",self.__numberOfService)
#we create an object for each service to show actual values of the attributes of the class and print the info of it
Service1=Service("Diagnostics","15","Hans K","March 13, 2022","1")
Service2=Service("Oil Replacement","120","Hans K","March 13, 2022","2")
Service3=Service("Oil Filter Parts","35","Hans K","March 13, 2022","3")
Service4=Service("Tire Replacement (2)","100","Hans K","March 13, 2022","4")
Service5=Service("Tire (2)","160","Hans K","March 13, 2022","5")
Service1.printInfo()
print("-------")
Service2.printInfo()
print("-------")
Service3.printInfo()
print("-------")
Service4.printInfo()
print("-------")
Service5.printInfo()

#We create a classs called Price and define the instructor to initializes the object with the provided attributes, and we define each attribute, then we have the setter functions 
#to set the values of the object attributes and getter functions to get the values of the objects attributes. We have the'__' before each attribute to ensure they are private' 
class Price():
    def __init__(self, servicePrice, total, taxes, discount, finalAmount):
        self.__servicePrice= servicePrice
        self.__total = total
        self.__taxes = taxes
        self.__discount = discount
        self.__finalAmount = finalAmount
    
    def setServicePrice(self, servicePrice):
        self.__servicePrice = servicePrice

    def getServicePrice(self):
        return self.servicePrice

    def setTotal(self, total):
        self.__total = total

    def getTotal(self):
        return self.__total

    def setTaxes(self, taxes):
        self.__taxes = taxes
    
    def getTaxes(self):
        return self.__taxes

    def setDiscount(self, discount):
        self.__discount = discount
 
    def getDiscount(self):
        return self.__discount

    def setFinalAmount(self, finalAmount):
        self.__finalAmount = finalAmount
        
    def getFinalAmount(self):
        return self.__finalAmount
#we define a function that will help us get all the information at once which much more efficient than getting them one by one.'    
    def printInfo(self):
        print(" Service Price: ",self.__servicePrice,", Total: ",self.__total, ",Taxes:", self.__taxes,", Discount:",self.__discount,", Final Amount:",self.__finalAmount)
#we create an object for the price of each service to show actual values of the attributes of the class and print the info of it
Price1=Price("15","451.5","21.5", "11.5", "440")
Price2=Price("120","451.5","21.5", "11.5", "440")
Price3=Price("35","451.5","21.5", "11.5", "440")
Price4=Price("100","451.5","21.5", "11.5", "440")
Price5=Price("160","451.5","21.5", "11.5", "440")
Price1.printInfo()
print("-------")
Price2.printInfo()
print("-------")
Price3.printInfo()
print("-------")
Price4.printInfo()
print("-------")
Price5.printInfo()

#First, we imported the enumerator type to limit the user choices and make the code more robust'
from enum import Enum

class Make(Enum):
    Toyota=1
    VolksWagen=2
    Nissan=3
    
class Model(Enum):
    Yaris=1
    Altima=2
    Pasat=3
    
class Color(Enum):
    White=1
    Silver=2
    Black=3
#We create a classs called Vehicle and define the instructor to initializes the object with the provided attributes, and we define each attribute, then we have the setter functions 
#to set the values of the object attributes and getter functions to get the values of the objects attributes. We have the'__' before each attribute to ensure they are private' 
class Vehicle:
    def __init__(self, make, model, yearOfVehicle, color, id):
        self.__make = make
        self.__model = model
        self.__yearOfVehicle = yearOfVehicle
        self.__color = color
        self.__id = id
    def setMake(self, make):
        self.__make = make

    def getMake(self):
        return self.__make

    def setModel(self, model):
        self.__model = model

    def getModel(self):
        return self.__model

    def setYearOfVehicle(self, yearOfVehicle):
        self.__yearOfVehicle = yearOfVehicle

    def getYearOfVehicle(self):
        return self.__yearOfVehicle

    def setColor(self, color):
        self.__color = color

    def getColor(self):
        return self.__color

    def setID(self, id):
        self.__id = id

    def getID(self):
        return self.__id
#we define a function that will help us get all the information at once which much more efficient than getting them one by one.'    
    def displayInfo(self):
        print('Make =',self.__make.name,', Model=',self.__model.name,', yearOfVehicle=',self.__yearOfVehicle,', Color=', self.__color.name,', ID=',self.__id)

class Car(Vehicle):
    def __init__(self, make, model, yearOfVehicle, color, id, numberOfDoors):
        Vehicle.__init__(self, make, model, yearOfVehicle, color, id)
        #number of doors is specfic attribute for the car since the vehicle can be motorcycles, boats, or airplanes, where the concept of doors may not apply.
        self.__numberOfDoors = numberOfDoors

    def displayInfo(self):
      Vehicle.displayInfo(self)
      print('numberOfDoors=', self.__numberOfDoors) 
#we create an object for car and Vehicle to show actual values of the attributes of the class and print the info of it
Car1=Car(Make.Nissan,Model.Altima, "2014", Color.Silver, "AD-89034", "4")
Vehicle1=Vehicle(Make.Nissan,Model.Altima, "2014", Color.Silver, "AD-89034")

Vehicle1.displayInfo()  
print("-------") 
Car1.displayInfo() 

  
